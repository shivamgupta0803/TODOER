{
  "version": 3,
  "sources": ["../../../app/routes/todoList.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/todoList.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/todoList.tsx\");\n  import.meta.hot.lastModified = \"1709209985974.9536\";\n}\n// REMIX HMR END\n\nimport { Form, redirect, useLoaderData, useSubmit } from \"@remix-run/react\";\nimport { useState } from \"react\";\nimport { db } from \"~/utils/db.server\";\nimport { Link } from \"@remix-run/react\";\nimport { authenticator } from \"~/utils/auth.server\";\nimport toast from \"react-hot-toast\";\nexport async function loader({\n  params,\n  request\n}) {\n  const user = await authenticator.isAuthenticated(request, {\n    failureRedirect: \"/login\"\n  });\n  let data = await db.todo.findMany({\n    where: {\n      userId: user.id\n    },\n    take: 20,\n    select: {\n      id: true,\n      title: true,\n      createdAt: true,\n      category: true,\n      status: true\n    }\n  });\n  return {\n    data,\n    todoId: params.todoId\n  };\n}\nexport async function action({\n  request\n}) {\n  const user = await authenticator.isAuthenticated(request, {\n    failureRedirect: \"/login\"\n  });\n  const formData = await request.formData();\n  const todoId = formData.get('todoId');\n  if (formData.get('action') === 'delete-todo') {\n    return await db.todo.delete({\n      where: {\n        id: formData.get('todoId')\n      }\n    });\n    toast.error(\"deleted\");\n  } else if (formData.get('action') === 'update-todo') {\n    return await db.todo.update({\n      where: {\n        id: formData.get('todoId')\n      },\n      data: {\n        title: formData.get('title')\n      }\n    });\n  } else if (formData.get('action') === 'change-status') {\n    await db.todo.update({\n      where: {\n        id: formData.get('todoId')\n      },\n      data: {\n        status: formData.get('status')\n      }\n    });\n    return redirect('/todoList');\n  } else if (formData.get('action') === 'update-sub-todo') {\n    return await db.subTodo.create({\n      data: {\n        title: formData.get('title'),\n        todo: {\n          connect: {\n            id: todoId\n          }\n        },\n        user: {\n          connect: {\n            id: user.id\n          }\n        }\n      }\n    });\n  } else if (formData.get('action') === 'deleteAll') {\n    console.log('DeleteAll runs...');\n    const arr = formData.get('value').split(',');\n    console.log(' this is arr', arr);\n    const subtodosPromises = arr.map(b => {\n      return db.subTodo.deleteMany({\n        where: {\n          todoId: b\n        }\n      });\n    });\n    await Promise.all(subtodosPromises);\n    const arrPromises = arr.map(a => {\n      return db.todo.delete({\n        where: {\n          id: a\n        }\n      });\n    });\n    return await Promise.all(arrPromises);\n  }\n  return redirect('/todos');\n}\nexport default function Todos() {\n  _s();\n  let {\n    data: todos,\n    todoId\n  } = useLoaderData();\n  const submit = useSubmit();\n  const [isEdit, setIsEdit] = useState(\"\");\n  const [subTodo, setSubTodo] = useState('');\n  const [arr, setArr] = useState([]);\n  let [selectStatus, setSelectStatus] = useState('All');\n  const [selectedItems, setSelectedItems] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  let [favourite, setFavourite] = useState([]);\n  let [showFavIcon, setShowFavIcon] = useState(false);\n  let [showFav, setShowFav] = useState(false);\n  const [number, setNumber] = useState(5);\n  const [favId, setFavId] = useState('');\n\n  // ################ pegination ###############\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    // Do something with the submitted number\n    console.log('Submitted number:', number);\n  };\n  const handleChange = event => {\n    if (event.target.value === 0) {\n      setNumber(1);\n    }\n    setNumber(event.target.value);\n  };\n  let recordsPerPage = number;\n  const lastIndex = currentPage * recordsPerPage;\n  const firstIndex = lastIndex - recordsPerPage;\n  let records = todos.slice(firstIndex, lastIndex);\n  const nPage = Math.ceil(todos.length / recordsPerPage);\n  const numbers = [...Array(nPage + 1).keys()].slice(1);\n  function prePage() {\n    if (currentPage !== 1) {\n      setCurrentPage(currentPage - 1);\n    }\n  }\n  function changeCurrentPage(id) {\n    setCurrentPage(id);\n  }\n  function nextPage() {\n    if (currentPage !== nPage) {\n      setCurrentPage(currentPage + 1);\n    }\n  }\n\n  // ################ end pegination ###############\n\n  function handleselectedItem(itemId) {\n    if (selectedItems.includes(itemId)) {\n      setSelectedItems(selectedItems.filter(id => id !== itemId));\n    } else {\n      setSelectedItems([...selectedItems, itemId]);\n    }\n  }\n  const value = records.map(todo => todo.id);\n  function handleSelectAll() {\n    if (selectedItems.length === records.length) {\n      setSelectedItems([]);\n    } else {\n      const value = records.map(todo => todo.id);\n      console.log(\"this is the value of array\", value);\n      setSelectedItems(value);\n    }\n  }\n  function handleChangeCat(status) {\n    console.log('this is status', status);\n    setSelectStatus(status);\n  }\n  console.log('this is selectStatus', selectStatus);\n  function handleClick() {\n    submit({\n      action: 'deleteAll',\n      value: value,\n      todoId: todoId\n    }, {\n      navigate: false,\n      method: \"post\"\n    });\n    setSelectedItems([]);\n  }\n\n  // favourite\n\n  // function handlefavourite(data) {\n\n  //     // const index = favourite.findIndex((f) => f.id == data.id)\n  //     // if (index != -1) {\n  //     //     favourite.splice(index, 1)\n  //     //     records = [...favourite]\n  //     //     setShowFavIcon(false); // Set showFavIcon to false because the item is removed from favorites\n  //     //     toast.error(\"Removed From Favourite\");\n  //     // }\n  //     // else {\n  //     //     setFavourite((prevFav) => [...prevFav, data]);\n  //     //     setShowFavIcon(true); // Set showFavIcon to true because the item is added to favorites\n  //     //     toast.success('Added Favourite');\n  //     // }\n\n  //     const index = favourite.findIndex((f) => f.id == data.id);\n  // if (index !== -1) {\n  //     // If item is already in favorites, remove it\n  //     favourite.splice(index, 1);\n  //     records = [...favourite];\n  //     setShowFavIcon(false); \n  // } else {\n  //     // If item is not in favorites, add it\n  //     setFavourite((prevFav) => [...prevFav, data]);\n  //     setShowFavIcon(true); \n  // }\n  // }\n  // console.log(showFavIcon);\n\n  function handlefavourite(data) {\n    console.log(\"clicked\");\n    const index = favourite.findIndex(f => f == data.id);\n    if (index !== -1) {\n      // If item is already in favorites, remove it\n      favourite.splice(index, 1);\n      records = [...favourite];\n      setFavourite([...favourite]);\n      toast.error('Removed favourite');\n    } else {\n      // If item is not in favorites, add it\n      setFavourite(prevFav => [...prevFav, data.id]);\n      toast.success('Added favourite');\n    }\n  }\n  if (showFav) {\n    records = records.filter(r => favourite.includes(r.id));\n  } else {\n    records = todos.slice(firstIndex, lastIndex);\n  }\n  if (selectStatus === 'All') {\n    records = records;\n  } else {\n    records = records.filter(todo => selectStatus === todo.status).map(todo => {\n      return todo;\n    });\n  }\n  const deleteTodoData = todos.map(todo => todo);\n  function deleteData(id) {}\n\n  // modal section\n\n  const [isOpen, setIsOpen] = useState(false);\n  const toggleModal = () => {\n    setIsOpen(!isOpen);\n  };\n\n  // end modal section\n\n  return <>\n\n            <div className=\"\"><br />\n                <h1 className=\"text-3xl text-center\">Todo Lists...</h1><hr /> <br />\n                <div className=\"flex justify-center\">\n\n                    {/* delete ALL */}\n                    <div className=\"search flex justify-center gap-5\">\n                        <p className=\"flex items-center gap-2 bg-yellow-200 rounded-full pl-4 w-36 h-8\">\n                            <input type=\"checkbox\" onChange={handleSelectAll} />  {selectedItems.length === value.length ? 'Deselect All' : 'Select All'}\n                        </p>\n\n                        <button type=\"submit\" onClick={handleClick} className=\"border-2 w-36 h-8 rounded-full bg-green-400\">DeleteAll</button>  <br /><br />\n                    </div>\n\n                    {/* end delete all */}\n\n\n                    {/* catagory select page */}\n\n                    <div className=\"status-box flex gap-2 justify-end ml-2 m-2\">\n\n                        <input type=\"radio\" name=\"status\" checked={selectStatus == 'All'} onChange={() => handleChangeCat(\"All\")} />All &nbsp;&nbsp;&nbsp;\n                        <input type=\"radio\" name=\"status\" checked={selectStatus == 'pending'} onChange={() => handleChangeCat(\"pending\")} />Pending &nbsp;&nbsp;&nbsp;\n                        <input type=\"radio\" name=\"status\" checked={selectStatus == 'completed'} onChange={() => handleChangeCat(\"completed\")} />Completed &nbsp;&nbsp;&nbsp;\n                        <input type=\"radio\" name=\"status\" checked={selectStatus == 'on_hold'} onChange={() => handleChangeCat(\"on_hold\")} />On Hold\n\n                    </div>\n                    {/* end category select page */}\n\n                </div>\n\n\n                <ol className=\"flex flex-col items-center\">\n                    {records?.map(data => <>\n                                <li key={data.id} className={`flex justify-around rounded-full m-4 bg-rose-100 w-2/3  ${data.status === 'pending' ? 'bg-yellow-200' : data.status === 'completed' ? 'bg-emerald-400' : 'bg-red-300'} `}>\n\n                                    {/* check box section */}\n\n                                    <Form method=\"POST\" className=\"flex justify-items-start\" onChange={() => {\n              value.push(data.id);\n            }}>\n                                        <input type=\"hidden\" name=\"todoId\" value={data.id} />\n                                        <input type=\"hidden\" name=\"action\" value={`deleteAll`} />\n                                        <input type=\"checkbox\" name=\"checkbox\" id=\"\" checked={selectedItems.includes(data.id)} onChange={() => handleselectedItem(data.id)} />\n                                    </Form>\n\n\n                                    {/* end checkbox */}\n\n                                    <Link className=\" text-2xl mt-2\" to={`/${data.id}`}>\n                                        {data.title}<br />\n                                    </Link>\n\n                                    <div className=\"flex items-center\">\n                                        <p className=\"w-4 \"><svg xmlns=\"http://www.w3.org/2000/svg\" data-name=\"Layer 3\" viewBox=\"0 0 32 32\" id=\"category\"><polygon fill=\"none\" stroke=\"#0832ff\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" points=\"4.48 15.38 17.62 28.52 27.52 18.62 14.38 5.48 5.19 6.19 4.48 15.38\"></polygon><polygon fill=\"#0832ff\" points=\"25.96 17.06 16.06 26.96 17.44 28.44 27.44 18.44 25.96 17.06\"></polygon><line x1=\"24.83\" x2=\"14.93\" y1=\"15.93\" y2=\"25.83\" fill=\"none\" stroke=\"#0832ff\" stroke-linecap=\"round\" stroke-miterlimit=\"10\"></line><circle cx=\"10\" cy=\"11\" r=\"1.5\" fill=\"#0832ff\"></circle></svg>\n                                        </p>\n                                        <p className=\"category-name\">\n                                            {data.category.category_Name}\n                                        </p>\n                                    </div>\n\n\n                                    <div className=\"flex gap-2 items-center justify-end\">\n\n\n                                        <Form method=\"POST\" onChange={e => {\n                e.preventDefault();\n                submit(e.currentTarget, {\n                  navigate: false,\n                  method: \"post\"\n                });\n              }}>\n                                            <input type=\"hidden\" name=\"todoId\" value={data.id} />\n                                            <input type=\"hidden\" name=\"action\" value={`change-status`} />\n                                            <select name=\"status\" id=\"\" value={data.status} className=\"mr-2\">\n                                                <option value=\"pending\">pending</option>\n                                                <option value=\"on_hold\">on_hold</option>\n                                                <option value=\"completed\">completed</option>\n                                            </select>\n\n                                        </Form>\n\n                                        {isEdit == data.id ? <Form method=\"POST\" onSubmit={e => {\n                e.preventDefault();\n                submit(e.currentTarget, {\n                  navigate: false,\n                  method: \"post\"\n                });\n                setIsEdit(\"\");\n              }}>\n                                                <p className=\"edit-input border-2\">\n                                                    <input type=\"text\" name=\"title\" required className=\"border-hidden\" />\n                                                </p>\n                                                <input type=\"hidden\" name=\"todoId\" value={data.id} />\n                                                <input type=\"hidden\" name=\"action\" value={'update-todo'} />\n                                                <div className=\"save_cancel grid grid-cols-2 divide-x\">\n                                                    <button type=\"submit\" className=\"border-2 bg-emerald-500 text-white\">save</button>\n                                                    <button onClick={() => {\n                    setIsEdit(\"\");\n                  }} className=\"border-2 bg-red-600 text-white\">cancel</button>\n                                                </div>\n                                            </Form> : <button onClick={() => {\n                setIsEdit(data.id);\n              }} className=\" w-4 rounded-lg\"><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path d=\"M471.6 21.7c-21.9-21.9-57.3-21.9-79.2 0L362.3 51.7l97.9 97.9 30.1-30.1c21.9-21.9 21.9-57.3 0-79.2L471.6 21.7zm-299.2 220c-6.1 6.1-10.8 13.6-13.5 21.9l-29.6 88.8c-2.9 8.6-.6 18.1 5.8 24.6s15.9 8.7 24.6 5.8l88.8-29.6c8.2-2.7 15.7-7.4 21.9-13.5L437.7 172.3 339.7 74.3 172.4 241.7zM96 64C43 64 0 107 0 160V416c0 53 43 96 96 96H352c53 0 96-43 96-96V320c0-17.7-14.3-32-32-32s-32 14.3-32 32v96c0 17.7-14.3 32-32 32H96c-17.7 0-32-14.3-32-32V160c0-17.7 14.3-32 32-32h96c17.7 0 32-14.3 32-32s-14.3-32-32-32H96z\" /></svg></button>}\n\n\n                                        <div>\n                                            {/* Button to toggle modal */}\n                                            <Form method=\"POST\" onClick={e => {\n                  deleteData(data.id);\n                }}>\n                                                <input type=\"hidden\" name=\"todoId\" value={data.id} />\n                                                <button type=\"submit\" name=\"action\" value={\"delete-todo\"} className=\" w-4 rounded-lg\" onClick={toggleModal}><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 448 512\"><path d=\"M135.2 17.7C140.6 6.8 151.7 0 163.8 0H284.2c12.1 0 23.2 6.8 28.6 17.7L320 32h96c17.7 0 32 14.3 32 32s-14.3 32-32 32H32C14.3 96 0 81.7 0 64S14.3 32 32 32h96l7.2-14.3zM32 128H416V448c0 35.3-28.7 64-64 64H96c-35.3 0-64-28.7-64-64V128zm96 64c-8.8 0-16 7.2-16 16V432c0 8.8 7.2 16 16 16s16-7.2 16-16V208c0-8.8-7.2-16-16-16zm96 0c-8.8 0-16 7.2-16 16V432c0 8.8 7.2 16 16 16s16-7.2 16-16V208c0-8.8-7.2-16-16-16zm96 0c-8.8 0-16 7.2-16 16V432c0 8.8 7.2 16 16 16s16-7.2 16-16V208c0-8.8-7.2-16-16-16z\" /></svg></button>\n                                            </Form>\n\n                                            {/* Modal */}\n                                            {isOpen && <div className=\"fixed inset-0 z-50 flex items-center justify-center \">\n                                                    <div className=\"bg-red rounded-lg p-8 border-2 bg-rose-200\">\n                                                        <h2 className=\"text-xl font-bold mb-4\">Delete</h2>\n                                                        <p className=\"mb-4\">This is the todo content.\n                                                        <br />{'->  ' + data.title}</p>\n                                                        <button onClick={toggleModal} className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\">\n                                                            Delete Todo\n                                                        </button>\n                                                    </div>\n                                                </div>}\n                                        </div>\n\n                                        {/* end modal */}\n\n\n\n                                        {/* sub todo section  */}\n\n\n                                        {subTodo == data.id ? <Form method=\"POST\" onSubmit={e => {\n                e.preventDefault();\n                submit(e.currentTarget, {\n                  navigate: false,\n                  method: \"post\"\n                });\n                setSubTodo(\"\");\n              }}>\n                                                <p className=\"edit-input border-2\">\n                                                    <input type=\"text\" name=\"title\" required className=\"border-hidden\" />\n                                                </p>\n                                                <input type=\"hidden\" name=\"todoId\" value={data.id} />\n                                                <input type=\"hidden\" name=\"action\" value={'update-sub-todo'} />\n                                                <div className=\"save_cancel grid grid-cols-2 divide-x\">\n                                                    <button type=\"submit\" className=\"border-2 bg-emerald-500 text-white\">Add subTodo</button>\n                                                    <button onClick={() => {\n                    setSubTodo(\"\");\n                  }} className=\"border-2 bg-red-600 text-white\">Cancel</button>\n                                                </div>\n                                            </Form> : <button onClick={() => {\n                setSubTodo(data.id);\n              }} className=\" w-4 rounded-lg\"><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 448 512\"><path d=\"M256 80c0-17.7-14.3-32-32-32s-32 14.3-32 32V224H48c-17.7 0-32 14.3-32 32s14.3 32 32 32H192V432c0 17.7 14.3 32 32 32s32-14.3 32-32V288H400c17.7 0 32-14.3 32-32s-14.3-32-32-32H256V80z\" /></svg></button>}\n\n\n                                        {/* end  */}\n\n\n\n                                        {/* {\n                                            favourite == data.id ? */}\n\n                                        <button onClick={() => handlefavourite(data)}>\n                                            {favourite.includes(data.id, 0) ? <span>\uD83D\uDC95</span> : <span>\u2764\uFE0F</span>}\n                                        </button>\n\n                                        {/* :  ''\n                                                }  */}\n                                        <Link to={`/${data.id}`}>\n                                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" className=\"w-8 h-8\"><path d=\"M217.9 105.9L340.7 228.7c7.2 7.2 11.3 17.1 11.3 27.3s-4.1 20.1-11.3 27.3L217.9 406.1c-6.4 6.4-15 9.9-24 9.9c-18.7 0-33.9-15.2-33.9-33.9l0-62.1L32 320c-17.7 0-32-14.3-32-32l0-64c0-17.7 14.3-32 32-32l128 0 0-62.1c0-18.7 15.2-33.9 33.9-33.9c9 0 17.6 3.6 24 9.9zM352 416l64 0c17.7 0 32-14.3 32-32l0-256c0-17.7-14.3-32-32-32l-64 0c-17.7 0-32-14.3-32-32s14.3-32 32-32l64 0c53 0 96 43 96 96l0 256c0 53-43 96-96 96l-64 0c-17.7 0-32-14.3-32-32s14.3-32 32-32z\" /></svg>\n                                        </Link>\n                                    </div>\n                                </li>\n                            </>)}\n                </ol>\n\n\n\n                <div className=\"pegination-footer  mt-2\">\n                    <ul className=\"pegination flex justify-center flex-row gap-4 \">\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 384 512\" className=\"w-8 h-8\" onClick={e => {\n            setShowFav(prev => !prev);\n          }}><path d=\"M0 48C0 21.5 21.5 0 48 0l0 48V441.4l130.1-92.9c8.3-6 19.6-6 27.9 0L336 441.4V48H48V0H336c26.5 0 48 21.5 48 48V488c0 9-5 17.2-13 21.3s-17.6 3.4-24.9-1.8L192 397.5 37.9 507.5c-7.3 5.2-16.9 5.9-24.9 1.8S0 497 0 488V48z\" /></svg>\n                        <Form onSubmit={handleSubmit} className=\"flex flex-row justify-center\">\n                            <label htmlFor=\"numberInput\" className=\"mt-1\">Records Per Page:</label>\n                            <input type=\"number\" id=\"numberInput\" value={number} onChange={handleChange} className=\"border border-gray-300 rounded px-3 py-1 mb-4 w-16\" placeholder=\"Enter a number\" required />\n                        </Form>\n                        <p>\n                            <li className=\"hover:bg-violet-600 rounded-full w-12 flex justify-center\"><Link onClick={prePage}>Prev</Link></li>\n                        </p>\n                        {numbers.map((n, i) => <span key={i} className=\"hover:bg-violet-600 rounded-full flex justify-center\">\n                                    <Link onClick={() => changeCurrentPage(n)}>{n}</Link>\n                                </span>)}\n                        <p>\n                            <li className=\"hover:bg-violet-600 rounded-full w-12 flex justify-center\"><Link onClick={nextPage}>Next</Link></li>\n                        </p>\n                    </ul>\n                </div>\n            </div>\n        </>;\n}\n\n// ##################################################  END ################################################\n_s(Todos, \"9h5NwAmNLJqGJXwWBDTBHIwAtAU=\", false, function () {\n  return [useLoaderData, useSubmit];\n});\n_c = Todos;\nvar _c;\n$RefreshReg$(_c, \"Todos\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": ["import_react", "value"]
}
