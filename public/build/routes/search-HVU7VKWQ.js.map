{
  "version": 3,
  "sources": ["../../../app/routes/search.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/search.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/search.tsx\");\n  import.meta.hot.lastModified = \"1709209571465.7996\";\n}\n// REMIX HMR END\n\nimport { Form } from '@remix-run/react';\nimport React, { useState } from 'react';\nimport { useLoaderData } from 'react-router';\nimport { authenticator } from '~/utils/auth.server';\nimport { db } from '~/utils/db.server';\nexport async function loader({\n  request\n}) {\n  const user = await authenticator.isAuthenticated(request, {\n    failureRedirect: \"/login\"\n  });\n  let data = await db.todo.findMany({\n    where: {\n      userId: user.id\n    },\n    select: {\n      id: true,\n      title: true,\n      createdAt: true\n    },\n    orderBy: {\n      createdAt: 'asc'\n    }\n  });\n  if (!data) {\n    console.error('not having any todo at this user');\n  }\n  return data;\n}\nconst Search = () => {\n  _s();\n  const todos = useLoaderData();\n  const [search, setSearch] = useState('');\n  const [newTodo, setNewTodo] = useState([]);\n  function handleChange(e) {\n    setSearch(e.target.value.toLowerCase());\n  }\n  function handleClick() {\n    console.log(\"Todos data:\", todos);\n\n    // Check if todos is an object\n    if (typeof todos === 'object' && todos !== null) {\n      // Convert the object values to an array\n      const todosArray = Object.values(todos);\n\n      // Filter the todos array based on the search query\n      let filteredTodos = todosArray.filter(todo => {\n        return todo.title.includes(search);\n      });\n\n      // Set the filtered todos\n      setNewTodo(filteredTodos);\n    } else {\n      console.error(\"Todos data is not an object or is null\");\n    }\n  }\n  return <>\n            <div className='mt-8 text-center'>\n                <Form>\n\n                    <div className=\"text-6xl text-center\">\n                        <span className=\"bg-clip-text text-transparent bg-gradient-to-r from-pink-500 to-violet-500\">\n                            Search\n                        </span>\n                    </div>\n                    <div className=\"search flex justify-center\">\n                        <input type=\"search\" name=\"search\" id=\"\" onChange={handleChange} className='border  w-1/2 h-12 pl-6' />\n                        <button type=\"submit\" onClick={handleClick} className=' h-12 w-32 bg-green-400'>Go</button>\n                    </div>\n                </Form>\n                <ol className='flex flex-col items-center'>\n                    {newTodo.map(todo => <li key={todo.id} className='border-2 mt-6 w-96 h-12 rounded-full bg-rose-200'>\n                            <div className='pt-2 text-2xl'>\n                                {todo.title}\n                            </div>\n                        </li>)}\n                </ol>\n            </div>\n        </>;\n};\n_s(Search, \"JnzySVq7kIiZz2VDtSLi0gPPYUw=\", false, function () {\n  return [useLoaderData];\n});\n_c = Search;\nexport default Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;AAsBA,IAAAA,gBAAgC;AAChC;AACA,kBAA8B;AAC9B,gBAAmB;AAoDV;AA5ET,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,4BAA8B,EAAE;AAAA,EACzE;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAMN,IAAI,KAAK,aAAa;AAEtB,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAAuB;AACvB,cAAY,IAAI,eAAe;AACjC;AAgCA,IAAM,SAAS,MAAM;AACnB,KAAG;AACH,QAAM,QAAQ,cAAc;AAC5B,QAAM,CAAC,QAAQ,SAAS,QAAI,wBAAS,EAAE;AACvC,QAAM,CAAC,SAAS,UAAU,QAAI,wBAAS,CAAC,CAAC;AACzC,WAAS,aAAa,GAAG;AACvB,cAAU,EAAE,OAAO,MAAM,YAAY,CAAC;AAAA,EACxC;AACA,WAAS,cAAc;AACrB,YAAQ,IAAI,eAAe,KAAK;AAGhC,QAAI,OAAO,UAAU,YAAY,UAAU,MAAM;AAE/C,YAAM,aAAa,OAAO,OAAO,KAAK;AAGtC,UAAI,gBAAgB,WAAW,OAAO,UAAQ;AAC5C,eAAO,KAAK,MAAM,SAAS,MAAM;AAAA,MACnC,CAAC;AAGD,iBAAW,aAAa;AAAA,IAC1B,OAAO;AACL,cAAQ,MAAM,wCAAwC;AAAA,IACxD;AAAA,EACF;AACA,SAAO,sFACG,6DAAC,SAAI,WAAU,oBACX;AAAA,uDAAC,QAEG;AAAA,yDAAC,SAAI,WAAU,wBACX,6DAAC,UAAK,WAAU,8EAA6E,sBAA7F;AAAA;AAAA;AAAA;AAAA,aAEA,KAHJ;AAAA;AAAA;AAAA;AAAA,aAIA;AAAA,MACA,mDAAC,SAAI,WAAU,8BACX;AAAA,2DAAC,WAAM,MAAK,UAAS,MAAK,UAAS,IAAG,IAAG,UAAU,cAAc,WAAU,6BAA3E;AAAA;AAAA;AAAA;AAAA,eAAqG;AAAA,QACrG,mDAAC,YAAO,MAAK,UAAS,SAAS,aAAa,WAAU,2BAA0B,kBAAhF;AAAA;AAAA;AAAA;AAAA,eAAkF;AAAA,WAFtF;AAAA;AAAA;AAAA;AAAA,aAGA;AAAA,SAVJ;AAAA;AAAA;AAAA;AAAA,WAWA;AAAA,IACA,mDAAC,QAAG,WAAU,8BACT,kBAAQ,IAAI,UAAQ,mDAAC,QAAiB,WAAU,oDACzC,6DAAC,SAAI,WAAU,iBACV,eAAK,SADV;AAAA;AAAA;AAAA;AAAA,WAEA,KAHsB,KAAK,IAAd;AAAA;AAAA;AAAA;AAAA,WAIjB,CAAK,KALb;AAAA;AAAA;AAAA;AAAA,WAMA;AAAA,OAnBJ;AAAA;AAAA;AAAA;AAAA,SAoBA,KArBH;AAAA;AAAA;AAAA;AAAA,SAsBD;AACR;AACA,GAAG,QAAQ,gCAAgC,OAAO,WAAY;AAC5D,SAAO,CAAC,aAAa;AACvB,CAAC;AACD,KAAK;AACL,IAAO,iBAAQ;AACf,IAAI;AACJ,aAAa,IAAI,QAAQ;AAEzB,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": ["import_react"]
}
